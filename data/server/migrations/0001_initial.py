# Generated by Django 2.1.3 on 2019-02-23 12:10

from django.db import migrations, models
import django.db.models.deletion
import systems.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('environment', '0001_initial'),
        ('subnet', '0001_initial'),
        ('group', '0001_initial'),
        ('firewall', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Server',
            fields=[
                ('created', models.DateTimeField(null=True)),
                ('updated', models.DateTimeField(null=True)),
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('config', systems.models.fields.EncryptedDataField(default={})),
                ('type', models.CharField(max_length=128, null=True)),
                ('variables', systems.models.fields.EncryptedDataField(default={})),
                ('state_config', systems.models.fields.EncryptedDataField(default={})),
                ('public_ip', models.CharField(max_length=128, null=True)),
                ('private_ip', models.CharField(max_length=128, null=True)),
                ('user', models.CharField(max_length=128, null=True)),
                ('password', systems.models.fields.EncryptedCharField(max_length=1096, null=True)),
                ('private_key', systems.models.fields.EncryptedDataField(null=True)),
                ('data_device', models.CharField(max_length=256, null=True)),
                ('backup_device', models.CharField(max_length=256, null=True)),
                ('environment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='environment.Environment')),
                ('firewalls', models.ManyToManyField(to='firewall.Firewall')),
                ('groups', models.ManyToManyField(to='group.Group')),
                ('subnet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='subnet.Subnet')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='server',
            unique_together={('environment', 'name')},
        ),
    ]
