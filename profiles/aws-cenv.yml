parents:
  - aws-network
  - aws-domain
  - aws-storage

config:
  admin_subnet_cidr_prefix: 28
  admin_subnet_public_ip: true

  admin_groups: cenv

  aws_admin_subnets:
    - admin-1
    - admin-2
    - admin-3

  aws_load_balancer_timeout: 60
  aws_load_balancer_health_path: /status
  aws_load_balancer_healthy_status: 200
  aws_load_balancer_health_check_interval: 30
  aws_load_balancer_health_timeout: 10
  aws_load_balancer_healthy_threshold: 3
  aws_load_balancer_unhealthy_threshold: 3

  aws_admin_machine: t2.micro
  aws_admin_tenancy: default
  aws_admin_monitoring: false
  aws_admin_ebs_optimized: false

  admin_port: 5123

group:
  cenv:

domain:
  "@root_domain":
    certificate_authority: letsencrypt

certificate:
  cenv:
    provider: aws
    network: "@aws_networks"
    domain: "@root_domain"
    groups: "@admin_groups"

subnet:
  admin-1:
    when_in: "@aws_admin_subnets"
    network: "@aws_networks"
    cidr_prefix: "@admin_subnet_cidr_prefix"
    zone_suffix: a
    use_public_ip: "@admin_subnet_public_ip"
    groups: "@admin_groups"

  admin-2:
    when_in: "@aws_admin_subnets"
    network: "@aws_networks"
    cidr_prefix: "@admin_subnet_cidr_prefix"
    zone_suffix: b
    use_public_ip: "@admin_subnet_public_ip"
    groups: "@admin_groups"

  admin-3:
    when_in: "@aws_admin_subnets"
    network: "@aws_networks"
    cidr_prefix: "@admin_subnet_cidr_prefix"
    zone_suffix: c
    use_public_ip: "@admin_subnet_public_ip"
    groups: "@admin_groups"

firewall:
  admin-external:
    network: "@aws_networks"
    groups: "@admin_groups"
    rules:
      tcp_in:
        mode: ingress
        protocol: tcp
        from_port: "@admin_port"
        to_port: "@admin_port"

  admin-internal:
    requires: admin-external
    network: "@aws_networks"
    groups: "@admin_groups"
    rules:
      tcp_in:
        mode: ingress
        protocol: tcp
        from_port: "@admin_port"
        to_port: "@admin_port"
        source_firewall: admin-external

  nfs:
    rules:
      tcp-in:
        cidrs: "&subnet:@aws_admin_subnets:cidr"
      udp-in:
        cidrs: "&subnet:@aws_admin_subnets:cidr"

storage:
  cenv-lib:
    provider: efs
    network: "@aws_networks"
    performance_mode: "@aws_storage_performance_mode"
    throughput_mode:  "@aws_storage_throughput_mode"
    provisioned_throughput: "@aws_storage_provisioned_throughput"
    encrypted: "@aws_storage_encrypted"
    groups: "@admin_groups"

mount:
  cenv-lib:
    storage: cenv-lib
    network: "@aws_networks"
    subnet: "@aws_admin_subnets"
    groups: "@admin_groups"
    firewalls: "@storage_firewalls"

load_balancer:
  cenv:
    provider: aws_application
    network: "@aws_networks"
    subnets: "@aws_admin_subnets"
    domain: "@root_domain"
    internal: false
    idle_timeout: "@aws_load_balancer_timeout"
    groups: "@admin_groups"
    firewalls:
      - internet
      - admin-external
    listeners:
      https:
        port: "@admin_port"
        certificate: cenv
        target_port: "@admin_port"
        target_protocol: https
        health_check_path: "@aws_load_balancer_health_path"
        health_check_interval: "@aws_load_balancer_health_check_interval"
        health_check_timeout: "@aws_load_balancer_health_timeout"
        healthy_status: "@aws_load_balancer_healthy_status"
        healthy_threshold: "@aws_load_balancer_healthy_threshold"
        unhealthy_threshold: "@aws_load_balancer_unhealthy_threshold"

server:
  cenv:
    count: 1
    provider: ec2_lb
    network: "@aws_networks"
    subnet: "@aws_admin_subnets"
    image: "@aws_ubuntu_image[<network>]"
    ssh_port: "@ssh_port"
    user: "@aws_ubuntu_user"
    machine: "@aws_admin_machine"
    tenancy: "@aws_admin_tenancy"
    monitoring: "@aws_admin_monitoring"
    ebs_optimized: "@aws_admin_ebs_optimized"
    load_balancer: cenv
    load_balancer_listener: https
    groups: "@admin_groups"
    volumes:
      /usr/local/lib/cenv:
        type: nfs4
        location: "&{mount(network=<network>;subnet=<subnet>):cenv-lib:remote_host}:/"
        options: "@aws_efs_volume_options"
    firewalls:
      - internet
      - ssh-external
      - admin-external

provision:
  cenv-credentials:
    command: server rotate
    server_search: groups.name=cenv

  cenv-user-environment:
    requires: cenv-credentials
    task: user-environment
    servers: groups.name=cenv

  bootstrap-cenv:
    requires: cenv-credentials
    task: bootstrap
    servers: groups.name=cenv
    user: "@aws_ubuntu_user"
    dev_build: false
    timezone: "@primary_timezone"
    env:
      CENV_DEFAULT_ENV_NAME: "@environment"
      CENV_DEFAULT_RUNTIME_REPO: "@DEFAULT_RUNTIME_REPO"
      CENV_DEFAULT_RUNTIME_IMAGE: "@DEFAULT_RUNTIME_IMAGE"
      CENV_PARALLEL: "@PARALLEL"
      CENV_THREAD_COUNT: "@THREAD_COUNT"
      CENV_TIME_ZONE: "@TIME_ZONE"
      CENV_CORE_MODULE: "@CORE_MODULE"
      CENV_DB_PACKAGE_ALL_NAME: "@DB_PACKAGE_ALL_NAME"
      CENV_DB_MAX_CONNECTIONS: "@DB_MAX_CONNECTIONS"
      CENV_LOG_LEVEL: "@LOG_LEVEL"
      CENV_ALLOWED_HOSTS: "@ALLOWED_HOSTS"
      CENV_ADMIN_USER: "@ADMIN_USER"
      CENV_DEFAULT_ADMIN_TOKEN: "@DEFAULT_ADMIN_TOKEN"

  deploy-cenv:
    requires: bootstrap-cenv
    command: deploy
    server_search: groups.name=cenv
    host: "cenv.@root_domain"
