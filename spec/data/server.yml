plugin:
    server:
        base: terraform
        manifest: server
        data: server
        providers:
            physical:
                requirement:
                    public_ip:
                        type: str
                        help: "Public IP of server"
                    private_ip:
                        type: str
                        help: "Private IP of server"
                    password:
                        type: str
                        help: "Password of server user"
                option:
                    user:
                        type: str
                        default: "admin"
                        help: "Server SSH user"
                        config_name: physical_server_user

    server_volume:
        base: terraform
        manifest: server_volume
        data: server_volume

data_mixins:
    server:
        class: ServerMixin
        fields:
            server:
                type: "@django.ForeignKey"
                relation: server
                options:
                    "null": true
                    on_delete: "@django.PROTECT"
                    editable: false

    server_relation:
        class: ServerRelationMixin
        fields:
            servers:
                type: "@django.ManyToManyField"
                relation: server

    server_volume:
        class: ServerVolumeMixin
        fields:
            volume:
                type: "@django.ForeignKey"
                relation: server_volume
                options:
                    "null": true
                    on_delete: "@django.PROTECT"
                    editable: false

    server_volume_relation:
        class: ServerVolumeRelationMixin
        fields:
            volumes:
                type: "@django.ManyToManyField"
                relation: server_volume

data_base:
    server:
        class: ServerBase
        base: resource
        mixins: [server]
        id_fields: [name, server_id]
        meta:
            unique_together: [server, name]
            scope: server

    server_volume:
        class: ServerVolumeBase
        base: resource
        mixins: [server_volume]
        id_fields: [name, volume_id]
        meta:
            unique_together: [volume, name]
            scope: server_volume

data:
    server:
        class: Server
        base: subnet
        mixins: [provider, group, domain, firewall_relation]
        roles:
            edit: [server_admin]
            view: [server_auditor]
        fields:
            public_ip:
                type: "@django.CharField"
                options:
                    "null": true
                    max_length: 128
            private_ip:
                type: "@django.CharField"
                options:
                    "null": true
                    max_length: 128
            ssh_port:
                type: "@django.IntegerField"
                options:
                    default: 22
            user:
                type: "@django.CharField"
                options:
                    "null": true
                    max_length: 128
            password:
                type: "@fields.EncryptedCharField"
                options:
                    "null": true
                    max_length: 1096
            private_key:
                type: "@fields.EncryptedDataField"
                options:
                    "null": true
            domain_name:
                type: "@django.CharField"
                options:
                    "null": true
                    max_length: 128
        meta:
            ordering: [name]
            relation: [domain]
            dynamic_fields: [status]
            provider_name: server

    server_volume:
        class: ServerVolume
        base: server
        mixins: [provider]
        roles:
            edit: [server_admin]
            view: [server_auditor]
        fields:
            location:
                type: "@django.CharField"
                options:
                    max_length: 256
            type:
                type: "@django.CharField"
                options:
                    default: ext4
                    max_length: 128
            owner:
                type: "@django.CharField"
                options:
                    default: root
                    max_length: 128
            group:
                type: "@django.CharField"
                options:
                    default: root
                    max_length: 128
            mode:
                type: "@django.CharField"
                options:
                    default: "0755"
                    max_length: 25
            options:
                type: "@fields.CSVField"
                options:
                    "null": true
        meta:
            ordering: [name]
            scope_process: post
            provider_name: server_volume

command_mixins:
    server:
        class: ServerMixin
        meta:
            server:
                data: server
                provider: true
                priority: 3
            server_volume:
                data: server_volume
                provider: true
                priority: 4

command_base:
    server:
        mixins: [domain, load_balancer, firewall, server]
        server_enabled: true
        groups_allowed: [server-admin]

command:
    server:
        resource: server
        base_name: server
        base: server
        priority: 86
        options:
            save_multiple: true

        volume:
            resource: server_volume
            base_name: server_volume
            base: server
            priority: 10
